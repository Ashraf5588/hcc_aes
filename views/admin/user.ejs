<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Management | Admin Dashboard</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Lexend:wght@300;400;500;600;700&display=swap" rel="stylesheet">
      <script src="https://kit.fontawesome.com/368eb67b69.js" crossorigin="anonymous"></script>
  <style>
    :root {
      --primary: #0ea5e9; /* Sky Blue */
      --primary-light: #7dd3fc;
      --primary-dark: #0369a1;
      --secondary: #8b5a2b; /* Brown */
      --secondary-light: #a67c52;
      --secondary-dark: #6f4518;
      --light: #f8fafc;
      --dark: #1e293b;
      --success: #22c55e;
      --warning: #f59e0b;
      --danger: #ef4444;
      --gray: #64748b;
      --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);
      --card-hover-shadow: 0 10px 15px rgba(0, 0, 0, 0.1), 0 4px 6px rgba(0, 0, 0, 0.05);
    }
    
    body {
      font-family: 'Lexend', sans-serif;
      background-color: #f1f5f9;
      color: var(--dark);
      line-height: 1.6;
    }
    
    .page-header {
      background: linear-gradient(135deg, var(--primary) 0%, var(--secondary-dark) 100%);
      color: white;
      padding: 2rem 0;
      margin-bottom: 2rem;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    
    .page-title {
      font-weight: 600;
      margin: 0;
    }
    
    .card {
      border: none;
      border-radius: 12px;
      box-shadow: var(--card-shadow);
      transition: all 0.3s ease;
    }
    
    .card:hover {
      box-shadow: var(--card-hover-shadow);
    }
    
    .card-header {
      background-color: white;
      border-bottom: 2px solid var(--primary-light);
      font-weight: 600;
      padding: 1rem 1.5rem;
    }
    
    .form-label {
      font-weight: 500;
      color: var(--dark);
      margin-bottom: 0.5rem;
    }
    
    .form-control, .form-select {
      border-radius: 8px;
      border: 1px solid #e2e8f0;
      padding: 0.75rem 1rem;
      font-size: 0.95rem;
      transition: all 0.2s;
    }
    
    .form-control:focus, .form-select:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.25);
    }
    
    .btn-primary {
      background-color: var(--primary);
      border-color: var(--primary);
      font-weight: 500;
      padding: 0.75rem 1.5rem;
      border-radius: 8px;
      transition: all 0.3s;
    }
    
    .btn-primary:hover {
      background-color: var(--primary-dark);
      border-color: var(--primary-dark);
      transform: translateY(-2px);
    }
    
    .btn-outline-secondary {
      color: var(--secondary);
      border-color: var(--secondary);
      font-weight: 500;
      padding: 0.75rem 1.5rem;
      border-radius: 8px;
    }
    
    .btn-outline-secondary:hover {
      background-color: var(--secondary);
      color: white;
    }
    
    .table {
      border-collapse: separate;
      border-spacing: 0;
      width: 100%;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: var(--card-shadow);
    }
    
    .table thead th {
      background-color: var(--primary);
      color: white;
      font-weight: 600;
      text-transform: uppercase;
      font-size: 0.85rem;
      padding: 1rem;
      letter-spacing: 0.5px;
    }
    
    .table tbody tr:nth-child(even) {
      background-color: rgba(14, 165, 233, 0.05);
    }
    
    .table tbody td {
      padding: 1rem;
      vertical-align: middle;
      border-top: 1px solid #e2e8f0;
    }
    
    .table tbody tr:hover {
      background-color: rgba(14, 165, 233, 0.1);
    }
    
    .badge {
      padding: 0.5rem 0.75rem;
      font-weight: 500;
      border-radius: 6px;
    }
    
    .badge-role-admin {
      background-color: var(--secondary);
      color: white;
    }
    
    .badge-role-teacher {
      background-color: var(--primary);
      color: white;
    }
    
    /* Custom select styling */
    .select-container {
      position: relative;
      margin-bottom: 0;
    }
    
    .select-icon {
      position: absolute;
      right: 1rem;
      top: calc(50% - 0.5rem);
      color: var(--gray);
      pointer-events: none;
    }
  </style>
</head>
<body>
  <header class="page-header">
    <div class="container">
      <div class="row align-items-center">
        <div class="col">
          <h1 class="page-title"><i class="fas fa-users-cog me-2"></i>User Management</h1>
          <p class="mb-0 text-white-50">Create and manage user accounts</p>
        </div>
      </div>
    </div>
  </header>

  <div class="container mb-5">
    <div class="row g-4">
      <div class="col-lg-5">
        <div class="card">
          <div class="card-header d-flex align-items-center">
            <i class="fas fa-user-plus me-2 text-primary"></i>
            <span>Add New User</span>
          </div>
          <div class="card-body p-4">
            <form action="/user" method="POST">
              <div class="mb-3">
                <label for="teacherName" class="form-label">Teacher Name</label>
                <div class="input-group">
                  <span class="input-group-text bg-white"><i class="fas fa-user text-primary"></i></span>
                  <input type="text" class="form-control" name="teacherName" id="teacherName" placeholder="Enter full name" required>
                </div>
              </div>
              
              <div class="mb-3">
                <label for="teacherID" class="form-label">Teacher ID</label>
                <div class="input-group">
                  <span class="input-group-text bg-white"><i class="fas fa-id-card text-primary"></i></span>
                  <input type="number" class="form-control" name="teacherID" id="teacherID" placeholder="Enter ID number" required>
                </div>
              </div>
              
              <div class="mb-3">
                <label for="role" class="form-label">Role</label>
                <div class="select-container">
                  <select name="role" id="role" class="form-select" required>
                    <option value="TEACHER">Teacher</option>
                    <option value="ADMIN">Admin</option>
                  </select>
                  <div class="select-icon">
                    <i class="fas fa-chevron-down"></i>
                  </div>
                </div>
              </div>
              
              <div class="entry row mb-3" style="border: 2px solid rgb(106, 108, 108);border-radius: 8px; padding: 1rem;display: flex;">
                <div class="col-md-6" id="entry">
                  <label for="allowedSubjects" class="form-label">Allowed Subjects</label>
                  <div class="select-container">
                    <select name="allowedSubjects" id="allowedSubjects" class="form-select">
                      <% uniqueSubjects = [...new Set(subjects.map(sub => sub.subject))]; %>
                      <option value="" disabled selected>Select subjects</option>
                      <% uniqueSubjects.forEach(subject => { %>
                        <option value="<%= subject._id %>"><%= subject %></option>
                      <% }); %>
                    </select>
                    <div class="select-icon">
                      
                    </div>
                  </div>
                </div>
                <div class="col-md-6">
                  <label for="classSelector" class="form-label">Class & Section</label>
                  <div class="select-container">
                    <select id="classSelector" class="form-select" name="studentClass" required>
                      <option value="" selected disabled>Select class & section</option>
                    <% 
                      // Sort classlist by class number
                      const sortedClassList = [...classlist].sort((a, b) => {
                        // Convert class to number for proper numeric sorting
                        const classA = parseInt(a.studentClass);
                        const classB = parseInt(b.studentClass);
                        
                        // First sort by class number
                        if (classA !== classB) {
                          return classA - classB;
                        }
                        
                        // If same class, sort by section
                        return a.section.localeCompare(b.section);
                      });
                      
                      // Group by class for optgroup
                      const classGroups = {};
                      classlist.forEach(item => {
                        const classNum = item.studentClass;
                        if (!classGroups[classNum]) {
                          classGroups[classNum] = [];
                        }
                        classGroups[classNum].push(item);
                      });
                      
                      // Get sorted class numbers
                      const sortedClassNumbers = Object.keys(classGroups).sort((a, b) => parseInt(a) - parseInt(b));
                      
                      // Loop through each class group
                      sortedClassNumbers.forEach(classNum => {
                        const sections = classGroups[classNum];
                    %>
                      <optgroup label="Class <%= classNum %> ðŸ“š">
                      <% sections.forEach(studentclass => { %>
                        <option 
                          value="<%=studentclass.studentClass%>_<%=studentclass.section%>"
                          data-class="<%=studentclass.studentClass%>"
                          data-section="<%=studentclass.section%>">
                          <%= studentclass.section %>
                        </option>
                      <% }); %>
                      </optgroup>
                    <% }); %>
                  </select>
                 
                </div>
                
                </div>
                 <button class="btn btn-outline-secondary" type="button" onclick="addsubject()">
                    <i class="fa-solid fa-circle-plus" style="color: #74C0FC;"></i>
                  </button>
              </div>
              
              <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <div class="input-group">
                  <span class="input-group-text bg-white"><i class="fas fa-at text-primary"></i></span>
                  <input type="text" class="form-control" name="username" id="username" placeholder="Choose a username" required>
                </div>
              </div>
              
              <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <div class="input-group">
                  <span class="input-group-text bg-white"><i class="fas fa-lock text-primary"></i></span>
                  <input type="password" class="form-control" name="password" id="password" placeholder="Create a password" required>
                  <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                    <i class="fas fa-eye"></i>
                  </button>
                </div>
                <small class="form-text text-muted mt-1">Password should be at least 8 characters long.</small>
              </div>
              
              <div class="d-grid gap-2 mt-4">
                <button type="submit" class="btn btn-primary">
                  <i class="fas fa-user-plus me-2"></i>Add User
                </button>
              </div>
              </div>
            </form>
          
        </div>
      </div>
      
      <div class="col-lg-7">
        <div class="card">
          <div class="card-header d-flex align-items-center justify-content-between">
            <div>
              <i class="fas fa-users me-2 text-primary"></i>
              <span>User Accounts</span>
            </div>
            <div class="input-group" style="max-width: 250px;">
              <input type="text" class="form-control" id="searchUsers" placeholder="Search users...">
              <button class="btn btn-outline-secondary" type="button">
                <i class="fas fa-search"></i>
              </button>
            </div>
          </div>
          <div class="card-body p-0">
            <div class="table-responsive">
              <table class="table mb-0">
                <thead>
                  <tr>
                    <th><i class="fas fa-user me-1"></i> Name</th>
                    <th><i class="fas fa-id-card me-1"></i> ID</th>
                    <th><i class="fas fa-user-tag me-1"></i> Role</th>
                    <th><i class="fas fa-book me-1"></i> Subjects</th>
                    <th><i class="fas fa-at me-1"></i> Username</th>
                    <th><i class="fas fa-cog me-1"></i> Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td class="fw-medium">Ashraf Ali Miya</td>
                    <td><span class="badge bg-light text-dark">111</span></td>
                    <td><span class="badge badge-role-teacher">Teacher</span></td>
                    <td>
                      <span class="badge bg-light text-dark mb-1 d-inline-block">Computer (6, Bhrikuti)</span>
                      <span class="badge bg-light text-dark d-inline-block">Computer (7, Koshi)</span>
                    </td>
                    <td>computer</td>
                    <td>
                      <div class="btn-group btn-group-sm">
                        <button class="btn btn-outline-primary" title="Edit user">
                          <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-outline-danger" title="Delete user">
                          <i class="fas fa-trash-alt"></i>
                        </button>
                      </div>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    function addsubject()
    {
      const assignedSubjects = [];
      const entryDiv = document.getElementById('entry');
      const lastEntry = entryDiv.lastElementChild;
      const subjectSelect = last.querySelector('#allowedSubjects').value;
      const classSelector = last.querySelector('#classSelector').value;

      if(subjectSelect && classSelector){
        assignedSubjects.push({ subject: subjectSelect, class: classSelector });
        const newEntry = lastEntry.cloneNode(true);
        newEntry.querySelector('#allowedSubjects').selectedIndex = 0;
        newEntry.querySelector('#classSelector').selectedIndex = 0;
        
        entriesDiv.appendChild(newEntry);
      }
       else {
        alert('Please select both subject and class');
      }

      console.log(assignedSubjects);
    }
  </script>
  <!-- Bootstrap Bundle with Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  
  <!-- Custom Script -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Toggle password visibility
      const togglePassword = document.getElementById('togglePassword');
      const passwordInput = document.getElementById('password');
      
      if (togglePassword && passwordInput) {
        togglePassword.addEventListener('click', function() {
          const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
          passwordInput.setAttribute('type', type);
          
          // Toggle icon
          const icon = this.querySelector('i');
          icon.classList.toggle('fa-eye');
          icon.classList.toggle('fa-eye-slash');
        });
      }
      
      // Search functionality
      const searchInput = document.getElementById('searchUsers');
      if (searchInput) {
        searchInput.addEventListener('keyup', function() {
          const searchTerm = this.value.toLowerCase();
          const tableRows = document.querySelectorAll('tbody tr');
          
          tableRows.forEach(row => {
            const text = row.textContent.toLowerCase();
            row.style.display = text.includes(searchTerm) ? '' : 'none';
          });
        });
      }
    });
  </script>
</body>
</html>