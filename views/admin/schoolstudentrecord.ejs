<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>School Student Records - Admin Panel</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #87CEEB;
            --secondary-color: #A0522D;
            --accent-color: #4682B4;
            --background-color: #f8f9fa;
            --card-background: #ffffff;
            --text-primary: #2c3e50;
            --text-secondary: #6c757d;
            --success-color: #28a745;
            --warning-color: #ffc107;
            --danger-color: #dc3545;
            --border-color: #e9ecef;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --shadow-hover: 0 8px 15px rgba(0, 0, 0, 0.15);
            --border-radius: 12px;
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--accent-color) 100%);
            min-height: 100vh;
            color: var(--text-primary);
            line-height: 1.6;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
        }

        .header {
            text-align: center;
            margin-bottom: 3rem;
            color: white;
        }

        .header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .card {
            background: var(--card-background);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 2rem;
            margin-bottom: 2rem;
            transition: var(--transition);
        }

        .card:hover {
            box-shadow: var(--shadow-hover);
            transform: translateY(-2px);
        }

        .card-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--secondary-color);
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .upload-area {
            border: 2px dashed var(--primary-color);
            border-radius: var(--border-radius);
            padding: 3rem 2rem;
            text-align: center;
            background: linear-gradient(145deg, #f8f9fa, #e9ecef);
            transition: var(--transition);
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .upload-area:hover {
            border-color: var(--accent-color);
            background: linear-gradient(145deg, #e9ecef, #f8f9fa);
        }

        .upload-area.dragover {
            border-color: var(--success-color);
            background: linear-gradient(145deg, #d4edda, #c3e6cb);
        }

        .upload-icon {
            font-size: 4rem;
            color: var(--primary-color);
            margin-bottom: 1rem;
            transition: var(--transition);
        }

        .upload-area:hover .upload-icon {
            color: var(--accent-color);
            transform: scale(1.1);
        }

        .upload-text {
            font-size: 1.2rem;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
            font-weight: 600;
        }

        .upload-subtext {
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        .file-input {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }

        .file-info {
            display: none;
            background: linear-gradient(145deg, var(--success-color), #28a745);
            color: white;
            padding: 1rem;
            border-radius: var(--border-radius);
            margin-top: 1rem;
            animation: slideIn 0.3s ease;
        }

        .file-info.show {
            display: block;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .requirements {
            background: linear-gradient(145deg, #fff3cd, #ffeaa7);
            border: 1px solid var(--warning-color);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            margin-bottom: 2rem;
        }

        .requirements h3 {
            color: var(--secondary-color);
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .requirements ul {
            list-style: none;
            padding-left: 0;
        }

        .requirements li {
            margin-bottom: 0.5rem;
            padding-left: 1.5rem;
            position: relative;
        }

        .requirements li:before {
            content: "âœ“";
            position: absolute;
            left: 0;
            color: var(--success-color);
            font-weight: bold;
        }

        .button-group {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
            justify-content: center;
        }

        .btn {
            padding: 1rem 2rem;
            border: none;
            border-radius: var(--border-radius);
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            min-width: 180px;
            justify-content: center;
        }

        .btn-primary {
            background: linear-gradient(145deg, var(--primary-color), var(--accent-color));
            color: white;
            box-shadow: var(--shadow);
        }

        .btn-primary:hover {
            background: linear-gradient(145deg, var(--accent-color), var(--primary-color));
            box-shadow: var(--shadow-hover);
            transform: translateY(-2px);
        }

        .btn-danger {
            background: linear-gradient(145deg, var(--danger-color), #c82333);
            color: white;
            box-shadow: var(--shadow);
        }

        .btn-danger:hover {
            background: linear-gradient(145deg, #c82333, var(--danger-color));
            box-shadow: var(--shadow-hover);
            transform: translateY(-2px);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 1.5rem;
            border-radius: var(--border-radius);
            color: white;
            font-weight: 600;
            z-index: 1000;
            transform: translateX(400px);
            transition: var(--transition);
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.success {
            background: linear-gradient(145deg, var(--success-color), #28a745);
        }

        .notification.error {
            background: linear-gradient(145deg, var(--danger-color), #c82333);
        }

        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            .header h1 {
                font-size: 2rem;
            }

            .card {
                padding: 1.5rem;
            }

            .upload-area {
                padding: 2rem 1rem;
            }

            .upload-icon {
                font-size: 3rem;
            }

            .button-group {
                flex-direction: column;
            }

            .btn {
                min-width: 100%;
            }
        }

        .loading {
            display: none;
            text-align: center;
            padding: 2rem;
        }

        .spinner {
            border: 4px solid var(--border-color);
            border-top: 4px solid var(--primary-color);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 1rem;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .danger-zone {
            border: 2px solid var(--danger-color);
            background: linear-gradient(145deg, #f8d7da, #f5c6cb);
        }

        .danger-zone .card-title {
            color: var(--danger-color);
        }
    </style>
</head>
<body>
    <%- include('../partials/sidenav', { 
        subjects: subjects || [], 
        studentClassdata: studentClassdata || [],
        terminals: terminals || [] 
    }) %>
    
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-school"></i> School Student Records</h1>
            <p>Upload and manage student record data</p>
        </div>

        <!-- File Upload Section -->
        <div class="card">
            <h2 class="card-title">
                <i class="fas fa-upload"></i>
                Upload Student Records
            </h2>

            <div class="requirements">
                <h3><i class="fas fa-info-circle"></i> File Requirements</h3>
                <ul>
                    <li>File format: CSV (.csv)</li>
                    <li>Maximum file size: 10MB</li>
                    <li>Include proper column headers</li>
                    <li>Ensure data is properly formatted</li>
                    <li>Remove any empty rows before upload</li>
                </ul>
            </div>

            <form id="uploadForm" action="/studentrecord" method="POST" enctype="multipart/form-data">
                <div class="upload-area" id="uploadArea">
                    <i class="fas fa-cloud-upload-alt upload-icon"></i>
                    <div class="upload-text">Click to upload or drag and drop</div>
                    <div class="upload-subtext">CSV files only</div>
                    <input type="file" name="studentRecords" id="studentRecords" accept=".csv" required class="file-input">
                </div>
                
                <div class="file-info" id="fileInfo">
                    <i class="fas fa-file-csv"></i>
                    <span id="fileName"></span>
                    <span id="fileSize"></span>
                </div>

                <div class="loading" id="loading">
                    <div class="spinner"></div>
                    <p>Uploading and processing file...</p>
                </div>

                <div class="button-group" style="margin-top: 2rem;">
                    <button type="submit" class="btn btn-primary" id="uploadBtn" disabled>
                        <i class="fas fa-upload"></i>
                        Upload Records
                    </button>
                </div>
            </form>
        </div>

        <!-- Danger Zone -->
        <div class="card danger-zone">
            <h2 class="card-title">
                <i class="fas fa-exclamation-triangle"></i>
                Danger Zone
            </h2>
            <p style="margin-bottom: 1.5rem; color: var(--danger-color); font-weight: 600;">
                <strong>Warning:</strong> This action will permanently delete all records from the first terminal. This cannot be undone.
            </p>
            
            <div class="button-group">
                <button type="button" class="btn btn-danger" onclick="confirmDelete()">
                    <i class="fas fa-trash-alt"></i>
                    Delete Analysis Records of Academic Year -  <%= nepaliYear.slice(0,4) %>
                </button>
            </div>
        </div>
    </div>

    <!-- Notification -->
    <div class="notification" id="notification"></div>

    <script>
        // File upload handling
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('studentRecords');
        const fileInfo = document.getElementById('fileInfo');
        const fileName = document.getElementById('fileName');
        const fileSize = document.getElementById('fileSize');
        const uploadBtn = document.getElementById('uploadBtn');
        const uploadForm = document.getElementById('uploadForm');
        const loading = document.getElementById('loading');

        // Drag and drop functionality
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.classList.add('dragover');
        });

        uploadArea.addEventListener('dragleave', (e) => {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
            
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                fileInput.files = files;
                handleFileSelect();
            }
        });

        // File input change
        fileInput.addEventListener('change', handleFileSelect);

        function handleFileSelect() {
            const file = fileInput.files[0];
            if (file) {
                // Validate file type
                if (!file.name.endsWith('.csv')) {
                    showNotification('Please select a CSV file only', 'error');
                    fileInput.value = '';
                    return;
                }

                // Validate file size (10MB limit)
                if (file.size > 10 * 1024 * 1024) {
                    showNotification('File size must be less than 10MB', 'error');
                    fileInput.value = '';
                    return;
                }

                // Show file info
                fileName.textContent = file.name;
                fileSize.textContent = `(${formatFileSize(file.size)})`;
                fileInfo.classList.add('show');
                uploadBtn.disabled = false;
                
                showNotification('File selected successfully', 'success');
            } else {
                fileInfo.classList.remove('show');
                uploadBtn.disabled = true;
            }
        }

        // Form submission
        uploadForm.addEventListener('submit', (e) => {
            if (!fileInput.files[0]) {
                e.preventDefault();
                showNotification('Please select a file first', 'error');
                return;
            }
            
            // Show loading
            loading.style.display = 'block';
            uploadBtn.disabled = true;
            uploadBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Uploading...';
        });

        // Utility functions
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        function showNotification(message, type) {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.className = `notification ${type}`;
            notification.classList.add('show');

            setTimeout(() => {
                notification.classList.remove('show');
            }, 4000);
        }

        function confirmDelete() {
            if (confirm('Are you absolutely sure you want to delete ALL records from the first terminal? This action cannot be undone.')) {
                if (confirm('This will permanently remove all student data from the first terminal. Continue?')) {
                    // Here you would typically make an AJAX request to delete the records
                    // For now, we'll just show a message
                    showNotification('Delete functionality needs to be implemented', 'error');
                }
            }
        }

        // Show success message if redirected after upload
        window.addEventListener('load', () => {
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.get('success') === 'true') {
                showNotification('Student records uploaded successfully!', 'success');
            } else if (urlParams.get('error') === 'true') {
                showNotification('Error uploading file. Please try again.', 'error');
            }
        });
    </script>
</body>
</html>